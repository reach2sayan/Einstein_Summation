name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            build_type: Release
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            build_type: Release
            c_compiler: clang
            cpp_compiler: clang++

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for Clang
        if: matrix.cpp_compiler == 'clang++'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libc++-dev libc++abi-dev

      - name: Cache CMake files
        uses: actions/cache@v3
        with:
          path: |
            ~/.cmake
            ${{ github.workspace }}/build/CMakeCache.txt
            ${{ github.workspace }}/build/CMakeFiles
          key: ${{ runner.os }}-${{ matrix.cpp_compiler }}-cmake-${{ hashFiles('CMakeLists.txt', '**/*.cmake') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.cpp_compiler }}-cmake-

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${GITHUB_WORKSPACE}/build-${{ matrix.cpp_compiler }}" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        shell: bash
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_STANDARD=23
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${GITHUB_WORKSPACE}

      - name: Cache build
        uses: actions/cache@v3
        with:
          path: ${{ steps.strings.outputs.build-output-dir }}
          key: ${{ runner.os }}-${{ matrix.cpp_compiler }}-build-${{ hashFiles('**/*.cpp', '**/*.hpp', '**/*.h') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.cpp_compiler }}-build-

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }}